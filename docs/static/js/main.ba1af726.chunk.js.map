{"version":3,"sources":["components/Home.js","components/About.js","config/firebase.js","components/Task.js","components/TaskForm.js","components/TaskList.js","components/NotFound.js","config/routes.js","App.js","reportWebVitals.js","index.js"],"names":["Home","About","useParams","id","action","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Task","task","delTask","editTask","TableRow","TableCell","title","completed","onClick","TaskForm","addTask","taskEdit","useState","titulo","setTitulo","setCompleted","userId","setUserId","setId","useEffect","noValidate","autoComplete","type","value","TextField","label","onChange","event","target","FormControlLabel","control","Checkbox","checked","name","color","Button","variant","undefined","TaskList","props","tasksList","setTaskList","setTaskEdit","firebaseDb","getFirestore","getTodos","then","res","db","a","todosCol","collection","getDocs","todoSnapshot","todoList","docs","map","doc","data","classes","makeStyles","table","minWidth","useStyles","deleteDoc","className","tasks","Math","floor","random","setDoc","TableContainer","component","Paper","Table","aria-label","TableHead","TableBody","NotFound","routing","basename","to","exact","path","App","routes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba1af726.chunk.js","sourcesContent":["import React from 'react'\n\nconst Home = () => {\n    return (\n        <div>\n            My component Home\n        </div>\n    )\n}\nexport default Home;\n","import React from 'react'\nimport { useParams } from  'react-router-dom';\n\nconst About = () => {\n\n    let  {id, action} = useParams();\n    //console.log(params);\n\n    return (\n        <div>\n            Esta es la página de about  idtarea: {id} action: {action}\n        </div>\n    )\n}\n\nexport default About\n","// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBZ7IDOP0Uwz0oYg3PrLIJQgqb_FC6gBJA\",\n  authDomain: \"todo-e1b77.firebaseapp.com\",\n  databaseURL: \"https://todo-e1b77.firebaseio.com\",\n  projectId: \"todo-e1b77\",\n  storageBucket: \"todo-e1b77.appspot.com\",\n  messagingSenderId: \"695021225062\",\n  appId: \"1:695021225062:web:c70b7d9103e8b1523b19a7\"\n};\n\n// Initialize Firebase\nconst firebase = initializeApp(firebaseConfig);\n\nexport default firebase;","import React from 'react'\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\n\nconst Task = ({ task, delTask, editTask }) => {\n\n  const  handleClick  = () => {\n    delTask(task);\n  }\n  return (\n    <TableRow>\n      <TableCell>{task.id}</TableCell>\n      <TableCell>{task.title}</TableCell>\n      <TableCell>{task.completed + \"\"}</TableCell>\n      <TableCell><DeleteIcon onClick={handleClick}/> <EditIcon onClick={() => editTask(task) }/></TableCell>\n    </TableRow>\n  )\n}\n\nexport default Task;","import React, { useState, useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst TaskForm = ({ addTask, taskEdit }) => {\n    const [ titulo, setTitulo ] = useState(taskEdit.title);\n    const [ completed, setCompleted ] = useState(taskEdit.completed);\n    const [ userId, setUserId ] = useState(taskEdit.userId);\n    const [ id, setId ] = useState(taskEdit.id);\n\n    useEffect(() => {\n        setTitulo(taskEdit.title);\n        setCompleted(taskEdit.completed);\n        setUserId(taskEdit.userId);\n        setId(taskEdit.id);\n    },[taskEdit])\n\n\n    const handleChange = (event)=> {\n        setTitulo(event.target.value);\n    }\n\n    const handleClick = (event) => {\n        //console.log(titulo+ \" \" +completed)\n        //let idNew = (id==null)? Math.floor(Math.random()*10000): id;\n        let task = { id, title: titulo, completed, userId: 1 }\n        setTitulo(\"\");\n        setCompleted(false);\n        setId(undefined);\n        setUserId(undefined);\n        //console.log(task);\n        addTask(task);\n    }\n    const handleChangeC = (event)=> {\n        setCompleted(event.target.checked); \n    }\n\n    return (\n        <form noValidate autoComplete=\"off\">\n            <input type=\"hidden\" value={userId} />\n            <input type=\"hidden\" value={id} />\n            <TextField id=\"standard-basic\" label=\"Título\" value={titulo} onChange={handleChange} />\n            <FormControlLabel\n                control={\n                    <Checkbox\n                        checked={completed}\n                        name=\"checkedB\"\n                        color=\"primary\"\n                        onChange={handleChangeC}\n                    />\n                }\n                label=\"Terminada\"\n            />\n            <Button variant=\"contained\" color=\"primary\" onClick={handleClick}>\n                {(id==null)?\"Agregar\":\"Actualizar\"}\n            </Button>\n        </form>\n    )\n}\n\nexport default TaskForm\n","import React, {useState, useEffect} from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\n\n//import tasks from '../data/tasks';\n//import axios from  '../config/axios';\nimport firebase from '../config/firebase';\nimport { getFirestore, collection, getDocs, doc, setDoc, deleteDoc } from 'firebase/firestore';\n\nimport Task from './Task';\nimport TaskForm from './TaskForm';\n\nconst TaskList = (props) => {\n  //var tasksList = tasks;\n\n  const [tasksList, setTaskList] = useState([]);\n  const [taskEdit,  setTaskEdit] = useState({ \"userId\": undefined, \"id\": undefined, \"title\": \"\", \"completed\": false });\n  const  firebaseDb = getFirestore(firebase);\n\n  useEffect(() => {\n      // axios.get(\"/todos?_start=20&_limit=20\")\n      // .then( (res) => setTaskList(res.data) ) ;\n        getTodos(firebaseDb)\n        .then( (res) => setTaskList(res) ) ;\n     // console.log(todoList);\n  },[]);\n\n  const getTodos = async (db) => {\n    const todosCol = collection(db, 'todo');\n    const todoSnapshot = await getDocs(todosCol);\n    const todoList = todoSnapshot.docs.map(doc => doc.data());\n    return todoList;\n  }\n\n\n  const useStyles = makeStyles({\n    table: {\n      minWidth: 700,\n    },\n  });\n  const classes = useStyles();\n\n  const addTask = (task) => {\n    let tasks = [...tasksList];\n    if(task.id === undefined)\n       task.id = Math.floor(Math.random()*10000);\n\n       setDoc(doc(firebaseDb, \"todo\", task.id+\"\"), task)\n             .then(() => {\n                getTodos(firebaseDb)\n                .then( (res) => setTaskList(res) ) ;               \n             });\n       //collection(firebaseDb,'todo');\n       //firebaseDb.collection('todo').doc(task.id).set(task);\n       //const id = firebaseDb.ref('todos').add(task);\n      //console.log(id);\n      // tasks.push(task);\n      // axios.post(\"/todos\", \n      //         {id: task.id, \n      //         userId: task.userId, \n      //         title: task.title, \n      //         completed: task.completed})\n      //       .then((res) => console.log(res.data));\n           \n    // }else{\n    //   let index  = tasks.findIndex( (taskitem) => task.id === taskitem.id );\n    //   tasks[index] = task;\n    // }\n    //console.log(tasks);\n    setTaskList(tasks);\n    //console.log(tasksList);\n  }\n\n  const delTask =  (task) => {\n    // let tasks = [...tasksList];\n    // let index  = tasks.findIndex( (taskitem) => task.id === taskitem.id );\n    // tasks.splice(index, 1);\n    // setTaskList(tasks);\n    deleteDoc(doc(firebaseDb, \"todo\", task.id+\"\"))\n    .then(() => {\n       getTodos(firebaseDb)\n       .then( (res) => setTaskList(res) ) ;               \n    });    \n  }\n\n  const renderTasks = () => {\n    return tasksList.map(task => <Task key={task.id} task={task} delTask={delTask} editTask={setTaskEdit}/>);\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>Tareas de :</h1>\n      <TaskForm addTask={addTask} taskEdit={taskEdit}/>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"customized table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>#</TableCell>\n              <TableCell>Titulo</TableCell>\n              <TableCell>Completado</TableCell>\n              <TableCell>Acciones</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          {renderTasks()}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  )\n}\n\nexport default TaskList;","import React from 'react'\n\nconst NotFound = () => {\n    return (\n        <div>\n            Página no encontrada\n        </div>\n    )\n}\n\nexport default NotFound\n","\nimport {Route, Switch, Link, BrowserRouter  as  Router } from  'react-router-dom';\nimport Home from  '../components/Home';\nimport About from  '../components/About';\nimport TaskList from  '../components/TaskList';\nimport NotFound from  '../components/NotFound';\n\n\nconst  routing  = (\n    <Router basename=\"/React-ICESI-2021-B/\">\n      <div>\n        <Link to=\"/\"> Home </Link>\n        <Link to=\"/about\"> About </Link>\n        <Link to=\"/tasks\"> Tasks </Link>       \n      </div> \n        <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/tasks\" component={TaskList} />\n            <Route path=\"/task/:id/:action\" component={About} />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"**\" component={NotFound} />\n        </Switch>\n    </Router>\n)\n\nexport default routing;","import './App.css';\nimport routes from './config/routes';\n\nfunction App() {\n\n  var owner= { nombre: \"Leonardo\", apellido: \"Bustamante\" }\n\n  return (\n    <div className=\"App\">\n\n       {routes} \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}